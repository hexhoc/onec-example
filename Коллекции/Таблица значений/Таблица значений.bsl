
// Преобразуется таблицу значений в ДанныеФормыКоллекция 
Процедура ЗаполнитьТаблицуНаФорме() 
	ЗначениеВРеквизитФормы(СоздатьТаблицуЗначений(), "ТаблицаНаФорме");
КонецПроцедуры

// Конвертация в массив структур и возвращение таблицы на клиент
Функция ТаблицаКакМассивСтруктур()
	ТаблицаЗначений = СоздатьТаблицуЗначений();
	МассивСтруктур = Новый Массив;
	Для Каждого Стр Из ТаблицаЗначений Цикл
		СтруктураСтроки = Новый Структура();    
		Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
			СтруктураСтроки.Вставить(Колонка.Имя, Стр[Колонка.Имя]);
		КонецЦикла;                                                 
		МассивСтруктур.Добавить(СтруктураСтроки);
	КонецЦикла;                                                     
	
	Возврат МассивСтруктур;
КонецФункции

// Выполнить фильтрацию в таблице значений
Процедура ОтборСтрокВТаблицеЗначений()
	ТаблицаЗначений = СоздатьТаблицуЗначений();
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("Колонка1", "Значение 1");
	СтруктураОтбора.Вставить("Колонка2", "Значение 1");
	
	МассивНайденныхСтрок = ТаблицаЗначений.НайтиСтроки(СтруктураОтбора);   
КонецПроцедуры       

// Выполнить фильтрацию в таблице значений
Процедура ВыполнитьОтборСтрокВТаблице1()
КонецПроцедуры       

// Создание и заполнение таблицы значений
Функция СоздатьТаблицуЗначений();      
	Таб = Новый ТаблицаЗначений();           
	// Добавление новых колонок
	Таб.Колонки.Добавить("Колонка1");
	Таб.Колонки.Добавить("Колонка2");      
	Таб.Колонки.Добавить("Колонка3");        
	
	// Индексирование колонок
	Таб.Индексы.Добавить("Колонка1, Колонка2"); 
	
	// Заполнение колонок
	Для Сч = 1 по 20 Цикл
		НовСтр = Таб.Добавить();
		НовСтр.Колонка1 = "Значение " + Сч;
		НовСтр.Колонка2 = "Значение " + Сч;
		НовСтр.Колонка3 = "Значение " + Сч;
	КонецЦикла;     
	
	Возврат Таб;
КонецФункции

Процедура УдалитьСтрокиТаблицыЗначений()
	ТаблицаЗначений = Новый ТаблицаЗначений();
	МассивСтрокКУдалению = Новый Массив();
	Для каждого Строка из ТаблицаЗначений цикл
		Если Строка.Колонка1 = 1 Или Строка.Колонка1 = 2 Тогда
			МассивСтрокКУдалению.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;    
	
	Для Каждого СтрокаКУдалению из МассивСтрокКУдалению цикл
		ТаблицаЗначений.Удалить(СтрокаКУдалению);
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьОписанияТипов()
	СтруктураОписанийТипов = Новый Структура();
	
	// Описание типа строки:
	Строка = Новый ОписаниеТипов("Строка");
	// Описание строки с уточнением через квалификатор: максимальная длина строки = 50 символов
	КвалификаторыСтроки_50 = Новый КвалификаторыСтроки(50);
	Строка_50 = Новый ОписаниеТипов("Строка", ,КвалификаторыСтроки_50);	
	
	// Описание типа числа:
	Число = Новый ОписаниеТипов("Число");
	// Описание числа с уточнением через квалификатор: общее число разрядов = 14, число дробной части = 3
	КвалификаторыЧисла_14_3 = Новый КвалификаторыЧисла(14, 3, ДопустимыйЗнак.Любой);
	Число_14_3 = Новый ОписаниеТипов("Число", КвалификаторыЧисла_14_3);
	
	// Описание типа даты:
	Дата = Новый ОписаниеТипов("Дата");
	// Описание даты с уточнением через квалификатор: храниться только дата, без времени
	КвалификаторыДаты = Новый КвалификаторыДаты(ЧастиДаты.Дата);
	Дата_БезВремени = Новый ОписаниеТипов("Дата", , ,КвалификаторыДаты);
	
	// Описание типа булево:
	Булево = Новый ОписаниеТипов("Булево");// Истина, Ложь
	
	// Описание типа справочника:
	СправочникНоменклатура = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	
	// Описание типа перечисление:
	ПеречислениеСпособОплаты = Новый ОписаниеТипов("ПеречислениеСсылка.СпособыОплаты");
	
	// Описание типа документа:
	ДокументДоговор = Новый ОписаниеТипов("ДокументСсылка.Договор");
	
	// Описание типа структуры:
	Структура = Новый ОписаниеТипов("Структура");
	
	// Описание типа соответствия:
	Соответствие = Новый ОписаниеТипов("Соответствие");
	
	// Описание типа массива:
	Массив = Новый ОписаниеТипов("Массив");
	
	// Описание типа хранилище значения:
	ХранилищеЗначения = Новый ОписаниеТипов("ХранилищеЗначения");
	
	// Описание типа таблица значений:
	ТаблицаЗначений = Новый ОписаниеТипов("ТаблицаЗначений");
	
	// Описание типа список значений:
	СписокЗначений = Новый ОписаниеТипов("СписокЗначений");
	
	// Описание типа картинки:
	Картинка = Новый ОписаниеТипов("Картинка");
	
	// Описание типа уникального идентификатора:
	УникальныйИдентификатор = Новый ОписаниеТипов("УникальныйИдентификатор");
	
	// Описание типа объекта метаданых:
	ОбъектМетаданных = Новый ОписаниеТипов("ОбъектМетаданных, Строка");
	
	// Описание составного типа (Например: строка+структура+справочник):
	СписокМассив = Новый Массив;
	СписокМассив.Добавить("Строка");
	СписокМассив.Добавить("Структура");
	СписокМассив.Добавить("СправочникСсылка.Номенклатура");
	ОписаниеСоставногоТипа = Новый ОписаниеТипов(СписокМассив);
	
	СтруктураОписанийТипов.Вставить("Строка", Строка);
	СтруктураОписанийТипов.Вставить("Строка_50", Строка_50);
	СтруктураОписанийТипов.Вставить("Число", Число);
	СтруктураОписанийТипов.Вставить("Число_14_3", Число_14_3);
	СтруктураОписанийТипов.Вставить("Дата", Дата);
	СтруктураОписанийТипов.Вставить("Дата_БезВремени", Дата_БезВремени);
	СтруктураОписанийТипов.Вставить("Булево", Булево);
	СтруктураОписанийТипов.Вставить("Номенклатура", СправочникНоменклатура);
	СтруктураОписанийТипов.Вставить("СпособОплаты", ПеречислениеСпособОплаты);
	СтруктураОписанийТипов.Вставить("ДокументДоговор", ДокументДоговор);
	СтруктураОписанийТипов.Вставить("Структура", Структура);
	СтруктураОписанийТипов.Вставить("Соответствие", Соответствие);
	СтруктураОписанийТипов.Вставить("Массив", Массив);
	СтруктураОписанийТипов.Вставить("ХранилищеЗначения", ХранилищеЗначения);
	СтруктураОписанийТипов.Вставить("ТаблицаЗначений", ТаблицаЗначений);
	СтруктураОписанийТипов.Вставить("СписокЗначений", СписокЗначений);
	СтруктураОписанийТипов.Вставить("Картинка", Картинка);
	СтруктураОписанийТипов.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	СтруктураОписанийТипов.Вставить("ОбъектМетаданных", ОбъектМетаданных);
	СтруктураОписанийТипов.Вставить("СоставнойТип", ОписаниеСоставногоТипа);
	
	Возврат СтруктураОписанийТипов;
КонецФункции
